{"version":3,"file":"static/js/907.50345cc4.chunk.js","mappings":"sNACA,EAAuB,0BAAvB,EAAwD,0BAAxD,EAAyF,0BAAzF,EAA4H,4BAA5H,EAAiK,4B,mBC+DjK,EA1DoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,QAAnB,IAC5BG,GAASF,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,MAAnB,IAE1BC,EAAkBJ,EAASG,QAC/B,SAAAE,GAAO,OACLA,EAAQC,KAAKC,cAAcC,SAASL,EAAOI,gBAC3CF,EAAQI,OAAOD,SAASL,EAFnB,IAmBT,OAJAO,EAAAA,EAAAA,YAAU,WACRZ,GAASa,EAAAA,EAAAA,MACV,GAAE,CAACb,KAGF,4BACE,kBAAOc,UAAWC,EAAlB,SACGT,EAAgBU,KAAI,gBAAGC,EAAH,EAAGA,GAAIT,EAAP,EAAOA,KAAMG,EAAb,EAAaA,OAAb,OACnB,gBAAaM,GAAIA,EAAIH,UAAWC,EAAhC,WACE,gBAAID,UAAWC,EAAf,UAA0BP,EAA1B,QACA,eAAIM,UAAWC,EAAf,SAA4BJ,KAC5B,yBACE,mBACEG,UAAWC,EACXG,KAAK,SACLC,QAAS,kBAzBK,SAAAF,GAC1BjB,GAASoB,EAAAA,EAAAA,IAAcH,IACpBI,MAAK,WACJrB,GAASa,EAAAA,EAAAA,MACV,IACAS,OAAM,SAAAC,GACLC,QAAQC,IAAR,iBAAsBF,EAAMG,SAC7B,GACJ,CAiB4BC,CAAoBV,EAA1B,EAHX,wBAJKA,EADU,OAkB5B,E,UCnDD,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAAgI,4BC8EhI,EA1EoB,WAClB,OAAwBW,EAAAA,EAAAA,UAAS,IAAjC,eAAOpB,EAAP,KAAaqB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAemB,EAAf,KACM9B,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,QAAnB,IAE5B6B,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBzB,EAAR,EAAQA,KAAM0B,EAAd,EAAcA,MAEd,OAAQ1B,GACN,IAAK,OACHqB,EAAQK,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,OAEL,EAmBD,OACE,kBAAMpB,UAAWC,EAAUoB,SAlBR,SAAAH,GACnBA,EAAMI,iBACN,IAAMC,EAAoB7B,EAAKC,cAELP,EAASoC,MACjC,qBAAG9B,KAAgB+B,sBAAwBF,CAA3C,IAGAG,MAAM,GAAD,OAAIhC,EAAJ,8BAIPR,GAASyC,EAAAA,EAAAA,IAAW,CAAEjC,KAAAA,EAAMG,OAAAA,KAC5BkB,EAAQ,IACRC,EAAU,IACX,EAGC,WACE,mBAAOhB,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACX2B,SAAUX,EACVG,MAAO1B,EACPU,KAAK,OACLV,KAAK,OACLmC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAIZ,mBAAO/B,UAAWC,EAAlB,oBAEE,kBACED,UAAWC,EACX2B,SAAUX,EACVG,MAAOvB,EACPO,KAAK,MACLV,KAAK,SACLmC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQ/B,UAAWC,EAAYG,KAAK,SAApC,2BAKL,EC5ED,EAAsB,oBAAtB,EAAkD,sBAAlD,EAAgF,sB,UC0BhF,EAvBe,WACb,IAAMlB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,gBAAKa,UAAWC,EAAhB,UACE,mBAAOD,UAAWC,EAAlB,mCAEE,kBACED,UAAWC,EACXG,KAAK,OACLV,KAAK,SACLkC,SAZmB,SAAAV,GACzBhC,GAASM,EAAAA,EAAAA,GAAgB0B,EAAMC,OAAOC,OACvC,EAWOY,YAAY,uBAKrB,ECzBYC,EAAgB,SAAA3C,GAAK,OAAIA,EAAMF,SAAS8C,OAAnB,ECSnB,SAASC,IACtB,IAAMjD,GAAWC,EAAAA,EAAAA,MACXiD,GAAY/C,EAAAA,EAAAA,IAAY4C,GAM9B,OAJAnC,EAAAA,EAAAA,YAAU,WACRZ,GAASa,EAAAA,EAAAA,MACV,GAAE,CAACb,KAGF,iCACE,SAACmD,EAAA,EAAD,WACE,6CAEF,SAAC,EAAD,KACA,yBAAMD,GAAa,4BACnB,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","redux/contacts/selectors.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"name\":\"ContactList_name__UCkFW\",\"number\":\"ContactList_number__2af8f\",\"button\":\"ContactList_button__7kL4l\"};","import css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const filteredContact = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n      contact.number.includes(filter)\n  );\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id))\n      .then(() => {\n        dispatch(fetchContacts());\n      })\n      .catch(error => {\n        console.log(`Error: ${error.message}`);\n      });\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <table>\n      <tbody className={css.list}>\n        {filteredContact.map(({ id, name, number }) => (\n          <tr key={id} id={id} className={css.item}>\n            <td className={css.name}>{name}:</td>\n            <td className={css.number}>{number}</td>\n            <td>\n              <button\n                className={css.button}\n                type=\"submit\"\n                onClick={() => handleDeleteContact(id)}\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }).isRequired\n  ),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const normalizationName = name.toLowerCase();\n\n    const alreadyInContacts = contacts.some(\n      ({ name }) => name.toLocaleLowerCase() === normalizationName\n    );\n    if (alreadyInContacts) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Filter_box__d3XyP\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { filteredContact } from 'redux/contacts/slice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    dispatch(filteredContact(event.target.value));\n  };\n\n  return (\n    <div className={css.box}>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"filter\"\n          onChange={handleFilterChange}\n          placeholder=\"Search contact\"\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","export const selectLoading = state => state.contacts.loading;\n\n//export const selectFilter = state => state.tasks.filter;\n\nexport const selectAllContacts = state => state.contactss.items;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["dispatch","useDispatch","contacts","useSelector","state","filter","filteredContact","contact","name","toLowerCase","includes","number","useEffect","fetchContacts","className","css","map","id","type","onClick","deleteContact","then","catch","error","console","log","message","handleDeleteContact","useState","setName","setNumber","handleChange","event","target","value","onSubmit","preventDefault","normalizationName","some","toLocaleLowerCase","alert","addContact","onChange","pattern","title","required","placeholder","selectLoading","loading","Tasks","isLoading","Helmet"],"sourceRoot":""}